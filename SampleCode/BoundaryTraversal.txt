using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Security;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    public class Node
    {
        public int data;
        public Node left;
        public Node right;

        public Node(int d)
        {
            data = d;
            left = null;
            right = null;
        }
    }

    public class Program
    {
        public static void Inorder(Node node)
        {
            if(node == null)
            {
                return;
            }

            Inorder(node.left);
            Console.Write(node.data + " ");
            Inorder(node.right);
        }

        public static void PrintLeaves(Node node)
        {
            if(node == null)
            {
                return;
            }

            if(node.left == null && node.right == null)
            {
                Console.Write(node.data + " ");
            }

            PrintLeaves(node.left);
            PrintLeaves(node.right);
        }

        public static void PrintLeftBoundary(Node node)
        {
            if (node == null)
            {
                return;
            }

            if (node.left == null && node.right == null)
            {
                return;
            }

            Console.Write(node.data + " ");
            PrintLeftBoundary(node.left);
        }

        public static void PrintRightBoundary(Node node)
        {
            if (node == null)
            {
                return;
            }

            if (node.left == null && node.right == null)
            {
                return;
            }

            Console.Write(node.data + " ");
            PrintRightBoundary(node.right);
        }

        public static void PrintBoundary(Node node)
        {
            if (node == null)
            {
                return;
            }

            Console.Write(node.data + " ");
            PrintLeftBoundary(node.left);
            PrintLeaves(node.left);
            PrintLeaves(node.right);
            PrintRightBoundary(node.right);
        }

        public static void Main(string[] args)
        {
            Node root = new Node(20);
            root.left = new Node(8);
            root.right = new Node(22);
            root.right.right = new Node(25);
            root.left.left = new Node(4);
            root.left.right = new Node(12);
            root.left.right.left = new Node(10);
            root.left.right.right = new Node(14);
            Console.WriteLine("Given tree's inorder traversal : ");
            Inorder(root);
            Console.WriteLine();
            Console.WriteLine("Boundary traversal : ");
            PrintBoundary(root);
            Console.ReadLine();
		}
    }
}
